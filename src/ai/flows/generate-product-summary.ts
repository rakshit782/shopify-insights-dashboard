'use server';

/**
 * @fileOverview This file defines a Genkit flow for generating concise product summaries using AI.
 *
 * The flow takes product data as input and returns a summary of the product.
 * - generateProductSummary - A function that handles the product summary generation process.
 * - GenerateProductSummaryInput - The input type for the generateProductSummary function.
 * - GenerateProductSummaryOutput - The return type for the generateProductSummary function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateProductSummaryInputSchema = z.object({
  productName: z.string().describe('The name of the product.'),
  productDescription: z.string().describe('A detailed description of the product.'),
  averageRating: z.number().describe('The average rating of the product.'),
  numberOfReviews: z.number().describe('The number of reviews for the product.'),
  unitsSold: z.number().describe('The number of units sold for the product.'),
  totalRevenue: z.number().describe('The total revenue generated by the product.'),
});
export type GenerateProductSummaryInput = z.infer<typeof GenerateProductSummaryInputSchema>;

const GenerateProductSummaryOutputSchema = z.object({
  summary: z.string().describe('A concise summary of the product.'),
});
export type GenerateProductSummaryOutput = z.infer<typeof GenerateProductSummaryOutputSchema>;

export async function generateProductSummary(
  input: GenerateProductSummaryInput
): Promise<GenerateProductSummaryOutput> {
  return generateProductSummaryFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateProductSummaryPrompt',
  input: {schema: GenerateProductSummaryInputSchema},
  output: {schema: GenerateProductSummaryOutputSchema},
  prompt: `You are an AI assistant designed to generate concise product summaries.

  Based on the following key metrics, create a compelling and informative summary of the product:

  Product Name: {{{productName}}}
  Product Description: {{{productDescription}}}
  Average Rating: {{{averageRating}}}
  Number of Reviews: {{{numberOfReviews}}}
  Units Sold: {{{unitsSold}}}
  Total Revenue: {{{totalRevenue}}}

  Summary:`,
});

const generateProductSummaryFlow = ai.defineFlow(
  {
    name: 'generateProductSummaryFlow',
    inputSchema: GenerateProductSummaryInputSchema,
    outputSchema: GenerateProductSummaryOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
